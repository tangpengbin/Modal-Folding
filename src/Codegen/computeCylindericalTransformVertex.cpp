#include "computeCylindericalTransformVertex.h"

namespace Codegen { 
void computeCylindericalTransformVertex(const Eigen::Matrix<double,3,1> & rotatePoint, const Eigen::Matrix<double,2,1> & translation0, const Eigen::Matrix<double,2,1> & translation1, double bendingCurvature, const Eigen::Matrix<double,2,1> & cylinderDirection, 
	Eigen::Matrix<double, 3, 1>& transformedVertex){
	double _i_var[66];
	_i_var[0] = (translation0(1,0))+(translation1(1,0));
	_i_var[1] = (translation0(0,0))+(translation1(0,0));
	_i_var[2] = -1;
	_i_var[3] = (_i_var[0])*(cylinderDirection(0,0));
	_i_var[4] = (_i_var[1])*(cylinderDirection(1,0));
	_i_var[5] = (cylinderDirection(0,0))*(rotatePoint(0,0));
	_i_var[6] = (_i_var[2])/(bendingCurvature);
	_i_var[7] = (_i_var[4])-(_i_var[3]);
	_i_var[8] = (cylinderDirection(1,0))*(rotatePoint(1,0));
	_i_var[9] = -(_i_var[5]);
	_i_var[10] = -(_i_var[6]);
	_i_var[11] = (cylinderDirection(1,0))*(cylinderDirection(1,0));
	_i_var[12] = (cylinderDirection(0,0))*(cylinderDirection(0,0));
	_i_var[13] = (_i_var[7])*(bendingCurvature);
	_i_var[14] = (_i_var[9])-(_i_var[8]);
	_i_var[15] = (cylinderDirection(1,0))*(rotatePoint(2,0));
	_i_var[16] = (_i_var[10])*(cylinderDirection(1,0));
	_i_var[17] = (_i_var[12])+(_i_var[11]);
	_i_var[18] = std::cos(_i_var[13]);
	_i_var[19] = 1;
	_i_var[20] = (cylinderDirection(0,0))*(_i_var[14]);
	_i_var[21] = (cylinderDirection(0,0))*(rotatePoint(2,0));
	_i_var[22] = (_i_var[6])*(cylinderDirection(0,0));
	_i_var[23] = (cylinderDirection(1,0))*(_i_var[14]);
	_i_var[24] = (_i_var[16])+(_i_var[15]);
	_i_var[25] = std::sqrt(_i_var[17]);
	_i_var[26] = (_i_var[17])*(rotatePoint(0,0));
	_i_var[27] = (_i_var[19])-(_i_var[18]);
	_i_var[28] = -(_i_var[20]);
	_i_var[29] = (_i_var[22])-(_i_var[21]);
	_i_var[30] = (_i_var[17])*(rotatePoint(1,0));
	_i_var[31] = -(_i_var[23]);
	_i_var[32] = (cylinderDirection(1,0))*(rotatePoint(0,0));
	_i_var[33] = (cylinderDirection(0,0))*(rotatePoint(1,0));
	_i_var[34] = std::sin(_i_var[13]);
	_i_var[35] = (_i_var[25])*(_i_var[24]);
	_i_var[36] = (_i_var[26])*(_i_var[18]);
	_i_var[37] = (_i_var[28])*(_i_var[27]);
	_i_var[38] = (_i_var[25])*(_i_var[29]);
	_i_var[39] = (_i_var[30])*(_i_var[18]);
	_i_var[40] = (_i_var[31])*(_i_var[27]);
	_i_var[41] = (_i_var[33])-(_i_var[32]);
	_i_var[42] = (_i_var[17])*(rotatePoint(2,0));
	_i_var[43] = (_i_var[6])*(_i_var[17]);
	_i_var[44] = (_i_var[0])*(cylinderDirection(1,0));
	_i_var[45] = (_i_var[1])*(cylinderDirection(0,0));
	_i_var[46] = (_i_var[35])*(_i_var[34]);
	_i_var[47] = (_i_var[37])+(_i_var[36]);
	_i_var[48] = (_i_var[38])*(_i_var[34]);
	_i_var[49] = (_i_var[40])+(_i_var[39]);
	_i_var[50] = (_i_var[25])*(_i_var[41]);
	_i_var[51] = (_i_var[42])*(_i_var[18]);
	_i_var[52] = (_i_var[43])*(_i_var[27]);
	_i_var[53] = (_i_var[45])+(_i_var[44]);
	_i_var[54] = (_i_var[47])+(_i_var[46]);
	_i_var[55] = (_i_var[49])+(_i_var[48]);
	_i_var[56] = (_i_var[50])*(_i_var[34]);
	_i_var[57] = (_i_var[52])+(_i_var[51]);
	_i_var[58] = (cylinderDirection(0,0))*(_i_var[53]);
	_i_var[59] = (_i_var[54])/(_i_var[17]);
	_i_var[60] = (cylinderDirection(1,0))*(_i_var[53]);
	_i_var[61] = (_i_var[55])/(_i_var[17]);
	_i_var[62] = (_i_var[57])+(_i_var[56]);
	_i_var[63] = (_i_var[59])+(_i_var[58]);
	_i_var[64] = (_i_var[61])+(_i_var[60]);
	_i_var[65] = (_i_var[62])/(_i_var[17]);
	transformedVertex(0,0) = _i_var[63];
	transformedVertex(1,0) = _i_var[64];
	transformedVertex(2,0) = _i_var[65];
}
void computeCylindericalTransformVertexJacobian(const Eigen::Matrix<double,3,1> & rotatePoint, const Eigen::Matrix<double,2,1> & translation0, const Eigen::Matrix<double,2,1> & translation1, double bendingCurvature, const Eigen::Matrix<double,2,1> & cylinderDirection, 
	Eigen::Matrix<double, 3, 7>& jacobian){
	double _i_var[106];
	_i_var[0] = (cylinderDirection(0,0))*(rotatePoint(0,0));
	_i_var[1] = (cylinderDirection(1,0))*(rotatePoint(1,0));
	_i_var[2] = -(_i_var[0]);
	_i_var[3] = -1;
	_i_var[4] = (translation0(1,0))+(translation1(1,0));
	_i_var[5] = (translation0(0,0))+(translation1(0,0));
	_i_var[6] = (_i_var[2])-(_i_var[1]);
	_i_var[7] = (cylinderDirection(1,0))*(cylinderDirection(1,0));
	_i_var[8] = (cylinderDirection(0,0))*(cylinderDirection(0,0));
	_i_var[9] = (_i_var[3])/(bendingCurvature);
	_i_var[10] = (_i_var[4])*(cylinderDirection(0,0));
	_i_var[11] = (_i_var[5])*(cylinderDirection(1,0));
	_i_var[12] = (cylinderDirection(0,0))*(_i_var[6]);
	_i_var[13] = (_i_var[8])+(_i_var[7]);
	_i_var[14] = 1;
	_i_var[15] = -(_i_var[9]);
	_i_var[16] = (cylinderDirection(1,0))*(_i_var[6]);
	_i_var[17] = (_i_var[11])-(_i_var[10]);
	_i_var[18] = -(_i_var[12]);
	_i_var[19] = (_i_var[14])/(_i_var[13]);
	_i_var[20] = (cylinderDirection(1,0))*(rotatePoint(2,0));
	_i_var[21] = (_i_var[15])*(cylinderDirection(1,0));
	_i_var[22] = -(_i_var[16]);
	_i_var[23] = (cylinderDirection(0,0))*(rotatePoint(2,0));
	_i_var[24] = (_i_var[9])*(cylinderDirection(0,0));
	_i_var[25] = (_i_var[17])*(bendingCurvature);
	_i_var[26] = (_i_var[19])*(_i_var[18]);
	_i_var[27] = (_i_var[13])*(rotatePoint(0,0));
	_i_var[28] = (_i_var[21])+(_i_var[20]);
	_i_var[29] = std::sqrt(_i_var[13]);
	_i_var[30] = (_i_var[19])*(_i_var[22]);
	_i_var[31] = (_i_var[13])*(rotatePoint(1,0));
	_i_var[32] = (_i_var[24])-(_i_var[23]);
	_i_var[33] = (_i_var[9])*(_i_var[13]);
	_i_var[34] = (cylinderDirection(1,0))*(rotatePoint(0,0));
	_i_var[35] = (cylinderDirection(0,0))*(rotatePoint(1,0));
	_i_var[36] = std::cos(_i_var[25]);
	_i_var[37] = std::sin(_i_var[25]);
	_i_var[38] = (_i_var[26])*(_i_var[3]);
	_i_var[39] = (_i_var[19])*(_i_var[27]);
	_i_var[40] = (_i_var[29])*(_i_var[28]);
	_i_var[41] = (_i_var[30])*(_i_var[3]);
	_i_var[42] = (_i_var[19])*(_i_var[31]);
	_i_var[43] = (_i_var[29])*(_i_var[32]);
	_i_var[44] = (_i_var[19])*(_i_var[33]);
	_i_var[45] = (_i_var[13])*(rotatePoint(2,0));
	_i_var[46] = (_i_var[35])-(_i_var[34]);
	_i_var[47] = (_i_var[14])-(_i_var[36]);
	_i_var[48] = -(_i_var[37]);
	_i_var[49] = (_i_var[39])+(_i_var[38]);
	_i_var[50] = (_i_var[19])*(_i_var[40]);
	_i_var[51] = (_i_var[42])+(_i_var[41]);
	_i_var[52] = (_i_var[19])*(_i_var[43]);
	_i_var[53] = (_i_var[44])*(_i_var[3]);
	_i_var[54] = (_i_var[19])*(_i_var[45]);
	_i_var[55] = (_i_var[29])*(_i_var[46]);
	_i_var[56] = (_i_var[19])*(_i_var[47]);
	_i_var[57] = (_i_var[49])*(_i_var[48]);
	_i_var[58] = (_i_var[50])*(_i_var[36]);
	_i_var[59] = (_i_var[51])*(_i_var[48]);
	_i_var[60] = (_i_var[52])*(_i_var[36]);
	_i_var[61] = (_i_var[54])+(_i_var[53]);
	_i_var[62] = (_i_var[19])*(_i_var[55]);
	_i_var[63] = (_i_var[56])*(_i_var[3]);
	_i_var[64] = (_i_var[58])+(_i_var[57]);
	_i_var[65] = (_i_var[60])+(_i_var[59]);
	_i_var[66] = (_i_var[61])*(_i_var[48]);
	_i_var[67] = (_i_var[62])*(_i_var[36]);
	_i_var[68] = (_i_var[63])*(cylinderDirection(0,0));
	_i_var[69] = (_i_var[19])*(_i_var[37]);
	_i_var[70] = (_i_var[63])*(cylinderDirection(1,0));
	_i_var[71] = (_i_var[64])*(bendingCurvature);
	_i_var[72] = (_i_var[65])*(bendingCurvature);
	_i_var[73] = (_i_var[67])+(_i_var[66]);
	_i_var[74] = (_i_var[68])*(_i_var[3]);
	_i_var[75] = (_i_var[19])*(_i_var[36]);
	_i_var[76] = (_i_var[69])*(_i_var[29]);
	_i_var[77] = (_i_var[70])*(_i_var[3]);
	_i_var[78] = (_i_var[71])*(_i_var[3]);
	_i_var[79] = (_i_var[72])*(_i_var[3]);
	_i_var[80] = (_i_var[73])*(bendingCurvature);
	_i_var[81] = (_i_var[74])*(cylinderDirection(0,0));
	_i_var[82] = (_i_var[75])*(_i_var[13]);
	_i_var[83] = (_i_var[76])*(_i_var[3]);
	_i_var[84] = (_i_var[77])*(cylinderDirection(1,0));
	_i_var[85] = (_i_var[71])*(cylinderDirection(1,0));
	_i_var[86] = (_i_var[72])*(cylinderDirection(1,0));
	_i_var[87] = (cylinderDirection(1,0))*(cylinderDirection(0,0));
	_i_var[88] = (_i_var[78])*(cylinderDirection(0,0));
	_i_var[89] = (cylinderDirection(0,0))*(cylinderDirection(1,0));
	_i_var[90] = (_i_var[79])*(cylinderDirection(0,0));
	_i_var[91] = (_i_var[80])*(_i_var[3]);
	_i_var[92] = (_i_var[82])+(_i_var[81]);
	_i_var[93] = (_i_var[77])*(cylinderDirection(0,0));
	_i_var[94] = (_i_var[83])*(cylinderDirection(1,0));
	_i_var[95] = (_i_var[74])*(cylinderDirection(1,0));
	_i_var[96] = (_i_var[82])+(_i_var[84]);
	_i_var[97] = (_i_var[76])*(cylinderDirection(0,0));
	_i_var[98] = (_i_var[76])*(cylinderDirection(1,0));
	_i_var[99] = (_i_var[83])*(cylinderDirection(0,0));
	_i_var[100] = (_i_var[8])+(_i_var[85]);
	_i_var[101] = (_i_var[87])+(_i_var[86]);
	_i_var[102] = (_i_var[80])*(cylinderDirection(1,0));
	_i_var[103] = (_i_var[89])+(_i_var[88]);
	_i_var[104] = (_i_var[7])+(_i_var[90]);
	_i_var[105] = (_i_var[91])*(cylinderDirection(0,0));
	jacobian(0,0) = _i_var[92];
	jacobian(1,0) = _i_var[93];
	jacobian(2,0) = _i_var[94];
	jacobian(0,1) = _i_var[95];
	jacobian(1,1) = _i_var[96];
	jacobian(2,1) = _i_var[97];
	jacobian(0,2) = _i_var[98];
	jacobian(1,2) = _i_var[99];
	jacobian(2,2) = _i_var[82];
	jacobian(0,3) = _i_var[100];
	jacobian(1,3) = _i_var[101];
	jacobian(2,3) = _i_var[102];
	jacobian(0,4) = _i_var[103];
	jacobian(1,4) = _i_var[104];
	jacobian(2,4) = _i_var[105];
	jacobian(0,5) = _i_var[100];
	jacobian(1,5) = _i_var[101];
	jacobian(2,5) = _i_var[102];
	jacobian(0,6) = _i_var[103];
	jacobian(1,6) = _i_var[104];
	jacobian(2,6) = _i_var[105];
}
void computeCylindericalTransformVertexHessians(const Eigen::Matrix<double,3,1> & rotatePoint, const Eigen::Matrix<double,2,1> & translation0, const Eigen::Matrix<double,2,1> & translation1, double bendingCurvature, const Eigen::Matrix<double,2,1> & cylinderDirection, 
	Eigen::Matrix<double, 3, 7>& hessian0, Eigen::Matrix<double, 3, 7>& hessian1, Eigen::Matrix<double, 3, 7>& hessian2, Eigen::Matrix<double, 3, 7>& hessian3, Eigen::Matrix<double, 3, 7>& hessian4, 
	Eigen::Matrix<double, 3, 7>& hessian5, Eigen::Matrix<double, 3, 7>& hessian6){
	double _i_var[242];
	_i_var[0] = (cylinderDirection(0,0))*(rotatePoint(0,0));
	_i_var[1] = (translation0(1,0))+(translation1(1,0));
	_i_var[2] = (translation0(0,0))+(translation1(0,0));
	_i_var[3] = (cylinderDirection(1,0))*(rotatePoint(1,0));
	_i_var[4] = -(_i_var[0]);
	_i_var[5] = (_i_var[1])*(cylinderDirection(0,0));
	_i_var[6] = (_i_var[2])*(cylinderDirection(1,0));
	_i_var[7] = (_i_var[4])-(_i_var[3]);
	_i_var[8] = (cylinderDirection(1,0))*(cylinderDirection(1,0));
	_i_var[9] = (cylinderDirection(0,0))*(cylinderDirection(0,0));
	_i_var[10] = -1;
	_i_var[11] = (_i_var[6])-(_i_var[5]);
	_i_var[12] = (cylinderDirection(0,0))*(_i_var[7]);
	_i_var[13] = (_i_var[9])+(_i_var[8]);
	_i_var[14] = 1;
	_i_var[15] = (_i_var[10])/(bendingCurvature);
	_i_var[16] = (cylinderDirection(1,0))*(_i_var[7]);
	_i_var[17] = (_i_var[11])*(bendingCurvature);
	_i_var[18] = -(_i_var[12]);
	_i_var[19] = (_i_var[14])/(_i_var[13]);
	_i_var[20] = -(_i_var[15]);
	_i_var[21] = -(_i_var[16]);
	_i_var[22] = (_i_var[15])*(_i_var[13]);
	_i_var[23] = std::sin(_i_var[17]);
	_i_var[24] = (cylinderDirection(0,0))*(_i_var[10]);
	_i_var[25] = (cylinderDirection(1,0))*(_i_var[10]);
	_i_var[26] = (_i_var[19])*(_i_var[18]);
	_i_var[27] = (_i_var[13])*(rotatePoint(0,0));
	_i_var[28] = (cylinderDirection(1,0))*(rotatePoint(2,0));
	_i_var[29] = (_i_var[20])*(cylinderDirection(1,0));
	_i_var[30] = (_i_var[19])*(_i_var[21]);
	_i_var[31] = (_i_var[13])*(rotatePoint(1,0));
	_i_var[32] = (cylinderDirection(0,0))*(rotatePoint(2,0));
	_i_var[33] = (_i_var[15])*(cylinderDirection(0,0));
	_i_var[34] = (_i_var[19])*(_i_var[22]);
	_i_var[35] = (_i_var[13])*(rotatePoint(2,0));
	_i_var[36] = (cylinderDirection(1,0))*(rotatePoint(0,0));
	_i_var[37] = (cylinderDirection(0,0))*(rotatePoint(1,0));
	_i_var[38] = -(_i_var[23]);
	_i_var[39] = (cylinderDirection(1,0))*(bendingCurvature);
	_i_var[40] = (_i_var[24])*(bendingCurvature);
	_i_var[41] = (_i_var[24])*(cylinderDirection(0,0));
	_i_var[42] = (_i_var[25])*(cylinderDirection(1,0));
	_i_var[43] = (_i_var[26])*(_i_var[10]);
	_i_var[44] = (_i_var[19])*(_i_var[27]);
	_i_var[45] = (_i_var[29])+(_i_var[28]);
	_i_var[46] = std::sqrt(_i_var[13]);
	_i_var[47] = (_i_var[30])*(_i_var[10]);
	_i_var[48] = (_i_var[19])*(_i_var[31]);
	_i_var[49] = (_i_var[33])-(_i_var[32]);
	_i_var[50] = (_i_var[34])*(_i_var[10]);
	_i_var[51] = (_i_var[19])*(_i_var[35]);
	_i_var[52] = (_i_var[37])-(_i_var[36]);
	_i_var[53] = (_i_var[39])*(_i_var[38]);
	_i_var[54] = (_i_var[40])*(_i_var[38]);
	_i_var[55] = (_i_var[41])*(_i_var[10]);
	_i_var[56] = (_i_var[24])*(cylinderDirection(1,0));
	_i_var[57] = (_i_var[25])*(cylinderDirection(0,0));
	_i_var[58] = (_i_var[42])*(_i_var[10]);
	_i_var[59] = (_i_var[44])+(_i_var[43]);
	_i_var[60] = (_i_var[46])*(_i_var[45]);
	_i_var[61] = (_i_var[48])+(_i_var[47]);
	_i_var[62] = (_i_var[46])*(_i_var[49]);
	_i_var[63] = (_i_var[51])+(_i_var[50]);
	_i_var[64] = (_i_var[46])*(_i_var[52]);
	_i_var[65] = (_i_var[53])*(_i_var[10]);
	_i_var[66] = (_i_var[54])*(_i_var[10]);
	_i_var[67] = (_i_var[55])*(_i_var[19]);
	_i_var[68] = (_i_var[56])*(_i_var[10]);
	_i_var[69] = (_i_var[57])*(_i_var[10]);
	_i_var[70] = (_i_var[58])*(_i_var[19]);
	_i_var[71] = (_i_var[39])*(_i_var[59]);
	_i_var[72] = (_i_var[19])*(_i_var[60]);
	_i_var[73] = (_i_var[39])*(_i_var[61]);
	_i_var[74] = (_i_var[19])*(_i_var[62]);
	_i_var[75] = (_i_var[39])*(_i_var[63]);
	_i_var[76] = (_i_var[19])*(_i_var[64]);
	_i_var[77] = (_i_var[40])*(_i_var[59]);
	_i_var[78] = (_i_var[40])*(_i_var[61]);
	_i_var[79] = (_i_var[40])*(_i_var[63]);
	_i_var[80] = (_i_var[65])*(_i_var[19]);
	_i_var[81] = std::cos(_i_var[17]);
	_i_var[82] = (_i_var[66])*(_i_var[19]);
	_i_var[83] = (_i_var[67])*(_i_var[10]);
	_i_var[84] = (_i_var[13])*(_i_var[19]);
	_i_var[85] = (_i_var[68])*(_i_var[19]);
	_i_var[86] = (_i_var[25])*(_i_var[46]);
	_i_var[87] = (_i_var[69])*(_i_var[19]);
	_i_var[88] = (_i_var[70])*(_i_var[10]);
	_i_var[89] = (cylinderDirection(0,0))*(_i_var[46]);
	_i_var[90] = (cylinderDirection(1,0))*(_i_var[46]);
	_i_var[91] = (_i_var[24])*(_i_var[46]);
	_i_var[92] = (_i_var[71])*(_i_var[10]);
	_i_var[93] = (_i_var[39])*(_i_var[72]);
	_i_var[94] = (_i_var[73])*(_i_var[10]);
	_i_var[95] = (_i_var[39])*(_i_var[74]);
	_i_var[96] = (_i_var[75])*(_i_var[10]);
	_i_var[97] = (_i_var[39])*(_i_var[76]);
	_i_var[98] = (_i_var[77])*(_i_var[10]);
	_i_var[99] = (_i_var[40])*(_i_var[72]);
	_i_var[100] = (_i_var[78])*(_i_var[10]);
	_i_var[101] = (_i_var[40])*(_i_var[74]);
	_i_var[102] = (_i_var[79])*(_i_var[10]);
	_i_var[103] = (_i_var[40])*(_i_var[76]);
	_i_var[104] = (_i_var[80])*(_i_var[10]);
	_i_var[105] = (_i_var[39])*(_i_var[81]);
	_i_var[106] = (_i_var[82])*(_i_var[10]);
	_i_var[107] = (_i_var[40])*(_i_var[81]);
	_i_var[108] = (_i_var[84])+(_i_var[83]);
	_i_var[109] = (_i_var[85])*(_i_var[10]);
	_i_var[110] = (_i_var[86])*(_i_var[19]);
	_i_var[111] = (_i_var[87])*(_i_var[10]);
	_i_var[112] = (_i_var[84])+(_i_var[88]);
	_i_var[113] = (_i_var[89])*(_i_var[19]);
	_i_var[114] = (_i_var[90])*(_i_var[19]);
	_i_var[115] = (_i_var[91])*(_i_var[19]);
	_i_var[116] = (_i_var[92])*(_i_var[81]);
	_i_var[117] = (_i_var[93])*(_i_var[38]);
	_i_var[118] = (_i_var[94])*(_i_var[81]);
	_i_var[119] = (_i_var[95])*(_i_var[38]);
	_i_var[120] = (_i_var[96])*(_i_var[81]);
	_i_var[121] = (_i_var[97])*(_i_var[38]);
	_i_var[122] = (_i_var[98])*(_i_var[81]);
	_i_var[123] = (_i_var[99])*(_i_var[38]);
	_i_var[124] = (_i_var[100])*(_i_var[81]);
	_i_var[125] = (_i_var[101])*(_i_var[38]);
	_i_var[126] = (_i_var[102])*(_i_var[81]);
	_i_var[127] = (_i_var[103])*(_i_var[38]);
	_i_var[128] = (_i_var[104])*(cylinderDirection(0,0));
	_i_var[129] = (_i_var[105])*(_i_var[19]);
	_i_var[130] = (_i_var[106])*(cylinderDirection(0,0));
	_i_var[131] = (_i_var[107])*(_i_var[19]);
	_i_var[132] = (_i_var[104])*(cylinderDirection(1,0));
	_i_var[133] = (_i_var[106])*(cylinderDirection(1,0));
	_i_var[134] = (_i_var[108])*(_i_var[38]);
	_i_var[135] = (_i_var[109])*(_i_var[38]);
	_i_var[136] = (_i_var[110])*(_i_var[81]);
	_i_var[137] = (_i_var[111])*(_i_var[38]);
	_i_var[138] = (_i_var[112])*(_i_var[38]);
	_i_var[139] = (_i_var[113])*(_i_var[81]);
	_i_var[140] = (_i_var[114])*(_i_var[81]);
	_i_var[141] = (_i_var[115])*(_i_var[81]);
	_i_var[142] = (_i_var[84])*(_i_var[38]);
	_i_var[143] = (_i_var[117])+(_i_var[116]);
	_i_var[144] = (_i_var[119])+(_i_var[118]);
	_i_var[145] = (_i_var[121])+(_i_var[120]);
	_i_var[146] = (_i_var[123])+(_i_var[122]);
	_i_var[147] = (_i_var[125])+(_i_var[124]);
	_i_var[148] = (_i_var[127])+(_i_var[126]);
	_i_var[149] = (_i_var[128])*(_i_var[10]);
	_i_var[150] = (_i_var[53])*(_i_var[19]);
	_i_var[151] = (_i_var[129])*(_i_var[46]);
	_i_var[152] = (_i_var[130])*(_i_var[10]);
	_i_var[153] = (_i_var[54])*(_i_var[19]);
	_i_var[154] = (_i_var[131])*(_i_var[46]);
	_i_var[155] = (_i_var[132])*(_i_var[10]);
	_i_var[156] = (_i_var[133])*(_i_var[10]);
	_i_var[157] = (_i_var[134])*(bendingCurvature);
	_i_var[158] = (_i_var[135])*(bendingCurvature);
	_i_var[159] = (_i_var[136])*(bendingCurvature);
	_i_var[160] = (_i_var[137])*(bendingCurvature);
	_i_var[161] = (_i_var[138])*(bendingCurvature);
	_i_var[162] = (_i_var[139])*(bendingCurvature);
	_i_var[163] = (_i_var[140])*(bendingCurvature);
	_i_var[164] = (_i_var[141])*(bendingCurvature);
	_i_var[165] = (_i_var[142])*(bendingCurvature);
	_i_var[166] = (_i_var[143])*(bendingCurvature);
	_i_var[167] = (_i_var[144])*(bendingCurvature);
	_i_var[168] = (_i_var[145])*(bendingCurvature);
	_i_var[169] = (_i_var[146])*(bendingCurvature);
	_i_var[170] = (_i_var[147])*(bendingCurvature);
	_i_var[171] = (_i_var[148])*(bendingCurvature);
	_i_var[172] = (_i_var[149])*(cylinderDirection(0,0));
	_i_var[173] = (_i_var[150])*(_i_var[13]);
	_i_var[174] = (_i_var[151])*(_i_var[10]);
	_i_var[175] = (_i_var[152])*(cylinderDirection(0,0));
	_i_var[176] = (_i_var[153])*(_i_var[13]);
	_i_var[177] = (_i_var[154])*(_i_var[10]);
	_i_var[178] = (_i_var[155])*(cylinderDirection(1,0));
	_i_var[179] = (_i_var[156])*(cylinderDirection(1,0));
	_i_var[180] = (_i_var[157])*(_i_var[10]);
	_i_var[181] = (_i_var[158])*(_i_var[10]);
	_i_var[182] = (_i_var[159])*(_i_var[10]);
	_i_var[183] = (_i_var[160])*(_i_var[10]);
	_i_var[184] = (_i_var[161])*(_i_var[10]);
	_i_var[185] = (_i_var[162])*(_i_var[10]);
	_i_var[186] = (_i_var[163])*(_i_var[10]);
	_i_var[187] = (_i_var[164])*(_i_var[10]);
	_i_var[188] = (_i_var[165])*(_i_var[10]);
	_i_var[189] = (_i_var[166])*(_i_var[10]);
	_i_var[190] = (_i_var[167])*(_i_var[10]);
	_i_var[191] = (_i_var[168])*(_i_var[10]);
	_i_var[192] = (_i_var[169])*(_i_var[10]);
	_i_var[193] = (_i_var[170])*(_i_var[10]);
	_i_var[194] = (_i_var[171])*(_i_var[10]);
	_i_var[195] = 0;
	_i_var[196] = (_i_var[173])+(_i_var[172]);
	_i_var[197] = (_i_var[155])*(cylinderDirection(0,0));
	_i_var[198] = (_i_var[174])*(cylinderDirection(1,0));
	_i_var[199] = (_i_var[176])+(_i_var[175]);
	_i_var[200] = (_i_var[156])*(cylinderDirection(0,0));
	_i_var[201] = (_i_var[177])*(cylinderDirection(1,0));
	_i_var[202] = (_i_var[149])*(cylinderDirection(1,0));
	_i_var[203] = (_i_var[173])+(_i_var[178]);
	_i_var[204] = (_i_var[151])*(cylinderDirection(0,0));
	_i_var[205] = (_i_var[152])*(cylinderDirection(1,0));
	_i_var[206] = (_i_var[176])+(_i_var[179]);
	_i_var[207] = (_i_var[154])*(cylinderDirection(0,0));
	_i_var[208] = (_i_var[151])*(cylinderDirection(1,0));
	_i_var[209] = (_i_var[174])*(cylinderDirection(0,0));
	_i_var[210] = (_i_var[154])*(cylinderDirection(1,0));
	_i_var[211] = (_i_var[177])*(cylinderDirection(0,0));
	_i_var[212] = (_i_var[157])*(cylinderDirection(1,0));
	_i_var[213] = (_i_var[158])*(cylinderDirection(1,0));
	_i_var[214] = (_i_var[159])*(cylinderDirection(1,0));
	_i_var[215] = (_i_var[160])*(cylinderDirection(1,0));
	_i_var[216] = (_i_var[161])*(cylinderDirection(1,0));
	_i_var[217] = (_i_var[162])*(cylinderDirection(1,0));
	_i_var[218] = (_i_var[163])*(cylinderDirection(1,0));
	_i_var[219] = (_i_var[164])*(cylinderDirection(1,0));
	_i_var[220] = (_i_var[165])*(cylinderDirection(1,0));
	_i_var[221] = (_i_var[166])*(cylinderDirection(1,0));
	_i_var[222] = (_i_var[167])*(cylinderDirection(1,0));
	_i_var[223] = (_i_var[168])*(cylinderDirection(1,0));
	_i_var[224] = (_i_var[169])*(cylinderDirection(1,0));
	_i_var[225] = (_i_var[170])*(cylinderDirection(1,0));
	_i_var[226] = (_i_var[171])*(cylinderDirection(1,0));
	_i_var[227] = (_i_var[180])*(cylinderDirection(0,0));
	_i_var[228] = (_i_var[181])*(cylinderDirection(0,0));
	_i_var[229] = (_i_var[182])*(cylinderDirection(0,0));
	_i_var[230] = (_i_var[183])*(cylinderDirection(0,0));
	_i_var[231] = (_i_var[184])*(cylinderDirection(0,0));
	_i_var[232] = (_i_var[185])*(cylinderDirection(0,0));
	_i_var[233] = (_i_var[186])*(cylinderDirection(0,0));
	_i_var[234] = (_i_var[187])*(cylinderDirection(0,0));
	_i_var[235] = (_i_var[188])*(cylinderDirection(0,0));
	_i_var[236] = (_i_var[189])*(cylinderDirection(0,0));
	_i_var[237] = (_i_var[190])*(cylinderDirection(0,0));
	_i_var[238] = (_i_var[191])*(cylinderDirection(0,0));
	_i_var[239] = (_i_var[192])*(cylinderDirection(0,0));
	_i_var[240] = (_i_var[193])*(cylinderDirection(0,0));
	_i_var[241] = (_i_var[194])*(cylinderDirection(0,0));
	hessian0(0,0) = _i_var[195];
	hessian0(1,0) = _i_var[195];
	hessian0(2,0) = _i_var[195];
	hessian0(0,1) = _i_var[195];
	hessian0(1,1) = _i_var[195];
	hessian0(2,1) = _i_var[195];
	hessian0(0,2) = _i_var[195];
	hessian0(1,2) = _i_var[195];
	hessian0(2,2) = _i_var[195];
	hessian0(0,3) = _i_var[196];
	hessian0(1,3) = _i_var[197];
	hessian0(2,3) = _i_var[198];
	hessian0(0,4) = _i_var[199];
	hessian0(1,4) = _i_var[200];
	hessian0(2,4) = _i_var[201];
	hessian0(0,5) = _i_var[196];
	hessian0(1,5) = _i_var[197];
	hessian0(2,5) = _i_var[198];
	hessian0(0,6) = _i_var[199];
	hessian0(1,6) = _i_var[200];
	hessian0(2,6) = _i_var[201];
	hessian1(0,0) = _i_var[195];
	hessian1(1,0) = _i_var[195];
	hessian1(2,0) = _i_var[195];
	hessian1(0,1) = _i_var[195];
	hessian1(1,1) = _i_var[195];
	hessian1(2,1) = _i_var[195];
	hessian1(0,2) = _i_var[195];
	hessian1(1,2) = _i_var[195];
	hessian1(2,2) = _i_var[195];
	hessian1(0,3) = _i_var[202];
	hessian1(1,3) = _i_var[203];
	hessian1(2,3) = _i_var[204];
	hessian1(0,4) = _i_var[205];
	hessian1(1,4) = _i_var[206];
	hessian1(2,4) = _i_var[207];
	hessian1(0,5) = _i_var[202];
	hessian1(1,5) = _i_var[203];
	hessian1(2,5) = _i_var[204];
	hessian1(0,6) = _i_var[205];
	hessian1(1,6) = _i_var[206];
	hessian1(2,6) = _i_var[207];
	hessian2(0,0) = _i_var[195];
	hessian2(1,0) = _i_var[195];
	hessian2(2,0) = _i_var[195];
	hessian2(0,1) = _i_var[195];
	hessian2(1,1) = _i_var[195];
	hessian2(2,1) = _i_var[195];
	hessian2(0,2) = _i_var[195];
	hessian2(1,2) = _i_var[195];
	hessian2(2,2) = _i_var[195];
	hessian2(0,3) = _i_var[208];
	hessian2(1,3) = _i_var[209];
	hessian2(2,3) = _i_var[173];
	hessian2(0,4) = _i_var[210];
	hessian2(1,4) = _i_var[211];
	hessian2(2,4) = _i_var[176];
	hessian2(0,5) = _i_var[208];
	hessian2(1,5) = _i_var[209];
	hessian2(2,5) = _i_var[173];
	hessian2(0,6) = _i_var[210];
	hessian2(1,6) = _i_var[211];
	hessian2(2,6) = _i_var[176];
	hessian3(0,0) = _i_var[212];
	hessian3(1,0) = _i_var[213];
	hessian3(2,0) = _i_var[214];
	hessian3(0,1) = _i_var[215];
	hessian3(1,1) = _i_var[216];
	hessian3(2,1) = _i_var[217];
	hessian3(0,2) = _i_var[218];
	hessian3(1,2) = _i_var[219];
	hessian3(2,2) = _i_var[220];
	hessian3(0,3) = _i_var[221];
	hessian3(1,3) = _i_var[222];
	hessian3(2,3) = _i_var[223];
	hessian3(0,4) = _i_var[224];
	hessian3(1,4) = _i_var[225];
	hessian3(2,4) = _i_var[226];
	hessian3(0,5) = _i_var[221];
	hessian3(1,5) = _i_var[222];
	hessian3(2,5) = _i_var[223];
	hessian3(0,6) = _i_var[224];
	hessian3(1,6) = _i_var[225];
	hessian3(2,6) = _i_var[226];
	hessian4(0,0) = _i_var[227];
	hessian4(1,0) = _i_var[228];
	hessian4(2,0) = _i_var[229];
	hessian4(0,1) = _i_var[230];
	hessian4(1,1) = _i_var[231];
	hessian4(2,1) = _i_var[232];
	hessian4(0,2) = _i_var[233];
	hessian4(1,2) = _i_var[234];
	hessian4(2,2) = _i_var[235];
	hessian4(0,3) = _i_var[236];
	hessian4(1,3) = _i_var[237];
	hessian4(2,3) = _i_var[238];
	hessian4(0,4) = _i_var[239];
	hessian4(1,4) = _i_var[240];
	hessian4(2,4) = _i_var[241];
	hessian4(0,5) = _i_var[236];
	hessian4(1,5) = _i_var[237];
	hessian4(2,5) = _i_var[238];
	hessian4(0,6) = _i_var[239];
	hessian4(1,6) = _i_var[240];
	hessian4(2,6) = _i_var[241];
	hessian5(0,0) = _i_var[212];
	hessian5(1,0) = _i_var[213];
	hessian5(2,0) = _i_var[214];
	hessian5(0,1) = _i_var[215];
	hessian5(1,1) = _i_var[216];
	hessian5(2,1) = _i_var[217];
	hessian5(0,2) = _i_var[218];
	hessian5(1,2) = _i_var[219];
	hessian5(2,2) = _i_var[220];
	hessian5(0,3) = _i_var[221];
	hessian5(1,3) = _i_var[222];
	hessian5(2,3) = _i_var[223];
	hessian5(0,4) = _i_var[224];
	hessian5(1,4) = _i_var[225];
	hessian5(2,4) = _i_var[226];
	hessian5(0,5) = _i_var[221];
	hessian5(1,5) = _i_var[222];
	hessian5(2,5) = _i_var[223];
	hessian5(0,6) = _i_var[224];
	hessian5(1,6) = _i_var[225];
	hessian5(2,6) = _i_var[226];
	hessian6(0,0) = _i_var[227];
	hessian6(1,0) = _i_var[228];
	hessian6(2,0) = _i_var[229];
	hessian6(0,1) = _i_var[230];
	hessian6(1,1) = _i_var[231];
	hessian6(2,1) = _i_var[232];
	hessian6(0,2) = _i_var[233];
	hessian6(1,2) = _i_var[234];
	hessian6(2,2) = _i_var[235];
	hessian6(0,3) = _i_var[236];
	hessian6(1,3) = _i_var[237];
	hessian6(2,3) = _i_var[238];
	hessian6(0,4) = _i_var[239];
	hessian6(1,4) = _i_var[240];
	hessian6(2,4) = _i_var[241];
	hessian6(0,5) = _i_var[236];
	hessian6(1,5) = _i_var[237];
	hessian6(2,5) = _i_var[238];
	hessian6(0,6) = _i_var[239];
	hessian6(1,6) = _i_var[240];
	hessian6(2,6) = _i_var[241];
}

 } 

